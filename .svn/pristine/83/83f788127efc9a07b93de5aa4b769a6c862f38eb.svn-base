using DLLFuniture;
using Libs;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class admin_control_wucproduct : System.Web.UI.UserControl
{
    public int CategoryID
    {
        get
        {
            object obj = ViewState["CategoryID"];
            return ((obj == null) ? -1 : Convert.ToInt32(ViewState["CategoryID"]));
        }
        set { ViewState["CategoryID"] = value; }
    }

    public int NewsID
    {
        get
        {
            object obj = ViewState["NewsID"];
            return ((obj == null) ? -1 : Convert.ToInt32(ViewState["NewsID"]));
        }
        set { ViewState["NewsID"] = value; }
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            LoadDDL();
            BindingData();
        }
    }

    private void LoadDDL()
    {
        Data objdata = new Data(Global.ConnectionSql);
        try
        {
           
            Category objcategory = new Category();
            objcategory.DataObject = objdata;
            ddlCategory.Items.Clear();
            ddlCategory.Items.Insert(0, new ListItem("------[Tất cả]-----", "-1"));
            CategoryCollection col = objcategory.GetAll(string.Empty,-1);
            if (col == null) { return; }
            int baseID = 0;
            foreach (Category category in col)
            {
                if (category.ParentID < baseID)
                {
                    baseID = category.ParentID;
                }
            }
            foreach (Category category in col)
            {
                if (category.ParentID == baseID)
                {
                    ddlCategory.Items.Add(new ListItem(category.CategoryName, category.CategoryID.ToString()));
                    AddChildrenHandle(category.CategoryID, col);
                }
            }

        }
        catch (Exception ex)
        {
            Global.WriteLogError("Update () " + ex);

        }
        finally
        {
            objdata.DeConnect();
        }
    }

    private void AddChildrenHandle(int ParentID, CategoryCollection col)
    {
        // recursive tree loader. Passes back in a node to retireve its childre until there are no more children for this node.
        foreach (Category category in col)                     // locate all children of this category
        {
            if (category.ParentID == ParentID)                 // found a child
            {
                string sTab = "....";
                ddlCategory.Items.Add(new ListItem(sTab + category.CategoryName, category.CategoryID.ToString()));
                AddChildrenHandle(category.CategoryID, col);                     // find this child's children
            }
        }
    }

    protected void btnSearch_Click(object sender, EventArgs e)
    {
        BindingData();
    }

    private ProductsCollection LoadProduct(int CategoryID,string textsearch)
    {
        Data objdata = new Data(Global.ConnectionSql);
        ProductsCollection col = null;
        try
        {
            Products obj = new Products();
            obj.DataObject = objdata;
            col = obj.GetListByCategoryID(CategoryID, textsearch);
        }
        catch (Exception ex)
        {
            Global.WriteLogError("LoadProduct()" + ex);
        }
        finally
        {
            objdata.DeConnect();
        }
        return col;
    }

    private void BindingData()
    {
        try
        {
            ProductsCollection col = null;
            col = this.LoadProduct(Convert.ToInt32(ddlCategory.SelectedValue), txtSearch.Text.Trim());
            if (col == null)
            {
                col = new ProductsCollection();
                lblcount.Text = "Có 0" + " record";
                rptData.DataSource = col;
                rptData.DataBind();
            }
            else
            {
                lblcount.Text = "Có " + col.Count.ToString() + " record";
                lblcount.ForeColor = System.Drawing.Color.Blue;
                anpPager.RecordCount = col.Count;
                anpPager.PageSize = Convert.ToInt32(ddlPageSize.SelectedValue);
                anpPager.ShowFirstLast = false;
                col = this.GetSubData(col, anpPager.StartRecordIndex - 1, anpPager.EndRecordIndex);
                rptData.DataSource = col;
                rptData.DataBind();
            }

        }
        catch (Exception ex)
        {
            Global.WriteLogError("BindingData()" + ex);
        }
        
    }

    private ProductsCollection GetSubData(ProductsCollection Source, int start, int end)
    {
        int iTotalRecord = Source.Count;
        ProductsCollection subSource = new ProductsCollection();
        if (Source != null)
        {
            for (int i = start; i < end; i++)
            {
                subSource.Add(Source[i]);
            }
        }
        return subSource;
    }    

    protected void rptData_ItemDataBound(object sender, RepeaterItemEventArgs e)
    {
        try
        {
            //Lấy data
            Products obj = (Products)e.Item.DataItem;
            if (obj == null) { return; }
            //Set x
            //set image
            ImageButton ibtIsActived = e.Item.FindControl("ibtIsActived") as ImageButton;
            if (ibtIsActived != null)
            {
                ibtIsActived.ImageUrl = "~/Images/uncheck.png";
                if (obj.IsActived) { ibtIsActived.ImageUrl = "~/Images/check.png"; }
                ibtIsActived.Attributes.Add("checked", obj.IsActived.ToString());
            }
            ImageButton btnDelete = e.Item.FindControl("btnDelete") as ImageButton;
            if (btnDelete != null)
            {
                btnDelete.ImageUrl = "~/Images/delete.gif";
            }
            ImageButton ibtslide = e.Item.FindControl("ibtslide") as ImageButton;
            if (ibtslide != null)
            {
                ibtslide.ImageUrl = "~/Images/slide.png";
            }
        
        }
        catch (Exception ex)
        {
            Global.WriteLogError("rptData_ItemDataBound : " + ex);
        }
    }

    protected void rptData_ItemCommand(object sender, RepeaterCommandEventArgs e)
    {
        try
        {
            NewsID = Convert.ToInt32(e.CommandArgument);
            if (e.CommandName == "Delete")
            {
                Deleted(NewsID);
            }
            if (e.CommandName == "DoSlide")
            {
                mpUpload.Show();
            }
            if (e.CommandName == "DoSetActive")
            {
                ImageButton ibtIsActived = e.Item.FindControl("ibtIsActived") as ImageButton;
                bool bIsActived = Convert.ToBoolean(ibtIsActived.Attributes["checked"]);
                this.SetActived(NewsID, !bIsActived);
            }

        }
        catch (Exception ex)
        {
            Global.WriteLogError("rptData_ItemDataBound ()" + ex);
        }
    }

    private void SetActived(int NewsID, bool IsActived)
    {
        Libs.Data data = new Libs.Data(Global.ConnectionSql);
        try
        {
           
            Products obj = new Products();
            obj.DataObject = data;
            obj.NewsID = NewsID;
            obj.IsActived = IsActived;
            if (obj.SetActived()) //no error
            {
                this.BindingData();

            }
            else
            {
                Global.WriteLogError("SetActived() " + "error");
            }
        }
        catch (Exception ex)
        {
            Global.WriteLogError("SetActived() " + ex);
        }
        finally
        {
            data.DeConnect();
        }
    }

    protected void btnAdd_Click(object sender, EventArgs e)
    {
        Response.Redirect("~/admin/product_add.aspx");
    }

    private void Deleted(int NewsID)
    {
        Data objdata = new Data(Global.ConnectionSql);
        try
        {
            Products obj = new Products();
            obj.DataObject = objdata;
            bool ok = obj.Delete(NewsID);
            this.BindingData();
        }
        catch (Exception ex)
        {
            Global.WriteLogError("Deleted() " + ex);

        }
        finally
        {
            objdata.DeConnect();
        }
    }

    protected void btnCencal_Click(object sender, EventArgs e)
    {
        mpUpload.Hide();
    }

    protected void btnUpload_Click(object sender, EventArgs e)
    {

        Data objdata = new Data(Global.ConnectionSql);
        try
        {
            Img obj = new Img();
            obj.DataObject = objdata;
            HttpFileCollection httpFileCollection = Request.Files;
            for (int i = 0; i < httpFileCollection.Count; i++)
            {
                HttpPostedFile httpPostedFile = httpFileCollection[i];
                if (httpPostedFile.ContentLength > 0)
                {
                    obj.Images = Global.GetConfigKey("uploadproduct") + httpPostedFile.FileName;
                    obj.ProductID = NewsID;
                    obj.Sort = 1;
                    int iresult = Convert.ToInt32(obj.Add());
                    httpPostedFile.SaveAs(Server.MapPath("~/" + Global.GetConfigKey("uploadproduct")) + "/" + System.IO.Path.GetFileName(httpPostedFile.FileName));
                }
            }
            this.BindingData();
        }
        catch (Exception ex)
        {
            Global.WriteLogError("Update () " + ex);
            mpUpload.Show();
        }
        finally
        {
            objdata.DeConnect();
        }
    }
}